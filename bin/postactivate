#!/bin/sh

# For this django postactivate script to work you must add the following configuration variables to your django settings
# PROJECT_DIR     = '/home/username/sites/example.com' # The root directory where your project is saved
# PKG_DIR_LIST    = ['%s/third_party' % PROJECT_DIR]   # List of additional package directories you want to add to the python path
# SETTINGS_MODULE = 'example.config.settings'          # The python path to your django settings
# SERVER_ADDR     = '127.0.0.1'                        # Django Dev Server address (Not Required)
# SERVER_PORT     = '8088'                             # Django Dev Server port (Not Required)
# FABFILE         = '%s/bin/fabfile.py' % PROJECT_DIR  # Path to your fabric fabfile (Not Required)

# this is needed so you can load your Django settings
export PYTHONPATH=$VIRTUAL_ENV

DJANGO_PROJECT_DIR=$(python -c "from "`basename "$VIRTUAL_ENV"`".config import settings; print getattr(settings, 'PROJECT_DIR', '')")
DJANGO_SETTINGS_MODULE=$(python -c "from "`basename "$VIRTUAL_ENV"`".config import settings; print getattr(settings, 'SETTINGS_MODULE', '')")
DJANGO_SERVER_ADDR=$(python -c "from "`basename "$VIRTUAL_ENV"`".config import settings; print getattr(settings, 'SERVER_ADDR', '')")
DJANGO_SERVER_PORT=$(python -c "from "`basename "$VIRTUAL_ENV"`".config import settings; print getattr(settings, 'SERVER_PORT', '')")
PKG_DIR_LIST=$(python -c "from "`basename $VIRTUAL_ENV`".config import settings; print ':'.join(getattr(settings, 'PKG_DIR_LIST', []))")
FABFILE=$(python -c "from "`basename "$VIRTUAL_ENV"`".config import settings; print getattr(settings, 'FABFILE', '')")
DJANGO_BIN_DIR=$(python -c "import sys, os; p=[p for p in sys.path if os.path.isdir('%s/django/bin' % p)]; print '%s/django/bin' % ''.join(p)")
ACTIVATED_MSG='Your Django-environment "'`basename $VIRTUAL_ENV`'" has been activated.

Django-environment Commands:
runserver      Starts the Django development server 
deactivate     Deactivates the current Django-environment 
workon <name>  Work on a different Django-environment'


export DJANGO_SETTINGS_MODULE=$DJANGO_SETTINGS_MODULE

# set the DJANGO_SERVER_ADDR enviroment for running the djanog dev server (Not Required)
if [ -n "$DJANGO_SERVER_ADDR" ]; then
	export DJANGO_SERVER_ADDR=$DJANGO_SERVER_ADDR
fi

# set the DJANGO_SERVER_PORT enviroment for running the djanog dev server (Not Required)
if [ -n "$DJANGO_SERVER_PORT" ]; then
	export DJANGO_SERVER_PORT=$(python -c "from "`basename $VIRTUAL_ENV`".config import settings; print settings.SERVER_PORT")
fi

# set up the PYTHONPATH
if [ -n "$DJANGO_PROJECT_DIR" ]; then
	export PYTHONPATH="$DJANGO_PROJECT_DIR:$DJANGO_PROJECT_DIR"
else
	export PYTHONPATH=$DJANGO_PROJECT_DIR
fi

# Add the django bin directory to our path
if [ -n "$DJANGO_BIN_DIR" ]; then
	export DJANGO_BIN_DIR=$DJANGO_BIN_DIR
	export PATH="$DJANGO_BIN_DIR:$PATH"
fi

# Setup an alias to the fabfile.py so fab <command> workds from anywhere
if [ -n "$FABFILE" ]; then
	alias fab="fab -f $FABFILE"
	ACTIVATED_MSG="$ACTIVATED_MSG 
fab <command>  Run fabric commands according to your Django FABFILE setting"

fi
	
cd $DJANGO_PROJECT_DIR
echo "
$ACTIVATED_MSG
"
